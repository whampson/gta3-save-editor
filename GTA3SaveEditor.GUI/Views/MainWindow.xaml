<Window
    x:Class="GTA3SaveEditor.GUI.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctrl="clr-namespace:GTA3SaveEditor.GUI.Controls"
    xmlns:conv="clr-namespace:GTA3SaveEditor.GUI.Converters"
    xmlns:conv2="clr-namespace:WpfEssentials.Win32.Converters;assembly=WpfEssentials.Win32"
    xmlns:v="clr-namespace:GTA3SaveEditor.GUI.Views"
    xmlns:m="clr-namespace:GTA3SaveEditor.GUI.ViewModels"
    mc:Ignorable="d"
    d:DesignHeight="500" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance Type=m:Main}"
    Loaded="Window_Loaded" Closing="Window_Closing">

    <Window.DataContext>
        <m:Main/>
    </Window.DataContext>

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <conv:IsZeroConverter x:Key="IsNotZeroConverter" Invert="True"/>
        <conv2:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>

        <DataTemplate DataType="{x:Type m:Welcome}">
            <v:WelcomeView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type m:General}">
            <v:GeneralView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type m:Player}">
            <v:PlayerView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type m:Radar}">
            <v:RadarView/>
        </DataTemplate>
        <!--<DataTemplate DataType="{x:Type m:TestMap}">
            <v:TestMapView/>
        </DataTemplate>-->
        <DataTemplate DataType="{x:Type m:JsonViewer}">
            <v:JsonView/>
        </DataTemplate>

        <Style TargetType="{x:Type ctrl:TabControlEx}" x:Key="TabControlStyle">

            <Setter Property="Template">
                <Setter.Value>
                    <!-- Template code to render TabControlEx. Adapted from http://stackoverflow.com/a/9802346. -->
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid
                            Background="{TemplateBinding Background}"
                            ClipToBounds="True"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="True">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <DockPanel Margin="2,2,0,0" LastChildFill="False">
                                <TabPanel
                                    x:Name="HeaderPanel"
                                    Margin="0,0,0,-1"
                                    VerticalAlignment="Bottom"
                                    Panel.ZIndex="1"
                                    DockPanel.Dock="Left"
                                    IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1"/>
                            </DockPanel>
                            <Border
                                x:Name="ContentPanel"
                                Grid.Row="1" Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">

                                <Grid
                                    x:Name="PART_ItemsHolder"
                                    Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding FileOpenCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding FileSaveCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="W" Command="{Binding FileCloseCommand}"/>
        <KeyBinding Key="F5" Command="{Binding FileRefreshCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding FileSaveAsCommand}"/>
        <KeyBinding Modifiers="Alt" Key="F4" Command="{Binding FileExitCommand}"/>
    </Window.InputBindings>

    <DockPanel>

        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open..." 
                    InputGestureText="Ctrl+O"
                    Command="{Binding FileOpenCommand}"/>
                <Separator/>
                <MenuItem Header="_Close"
                    InputGestureText="Ctrl+W"
                    Command="{Binding FileCloseCommand}"/>
                <Separator/>
                <MenuItem Header="_Save"
                    InputGestureText="Ctrl+S"
                    Command="{Binding FileSaveCommand}"/>
                <MenuItem Header="_Save As..."
                    InputGestureText="Ctrl+Shift+S"
                    Command="{Binding FileSaveAsCommand}"/>
                <Separator/>
                <MenuItem Header="_Refresh"
                    InputGestureText="F5"
                    Command="{Binding FileRefreshCommand}"/>
                <Separator/>
                <MenuItem Header="_Recent Files"
                    IsEnabled="{Binding TheSettings.RecentFiles.Count, Converter={StaticResource IsNotZeroConverter}}"
                    ItemsSource="{Binding TheSettings.RecentFiles}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding DataContext.FileOpenRecentCommand,
                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="E_xit"
                    InputGestureText="Alt+F4"
                    Command="{Binding FileExitCommand}"/>
            </MenuItem>
        </Menu>

        <Grid DockPanel.Dock="Bottom">

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>

            <ctrl:TabControlEx
                DockPanel.Dock="Top"
                Style="{StaticResource TabControlStyle}"
                ItemsSource="{Binding Tabs}"
                IsSynchronizedWithCurrentItem="True"
                SelectedIndex="{Binding SelectedTabIndex}"
                SelectionChanged="TabControl_SelectionChanged">

                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Style>
                </TabControl.ItemContainerStyle>

                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Title, Mode=OneWay}"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </ctrl:TabControlEx>

            <StatusBar Grid.Row="2" Grid.ColumnSpan="5">

                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="95"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem Grid.Column="0">
                    <TextBlock Text="{Binding StatusText}"/>
                </StatusBarItem>

                <Separator Grid.Column="1"/>

                <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Center">
                    <TextBlock Text="{Binding TheSave.FileFormat}">
                        <TextBlock.ToolTip>
                            <ToolTip Content="{Binding TheSave.FileFormat.Description}"/>
                        </TextBlock.ToolTip>
                        <!--<TextBlock.ContextMenu>
                            <ContextMenu ItemsSource="{Binding FileFormats}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <EventSetter Event="Click" Handler="FileTypeMenuItem_Click"/>
                                        <Setter Property="Header" Value="{Binding}"/>
                                        <Setter Property="local:MenuItemExtensions.GroupName" Value="FileFormatGroup"/>
                                        <Setter Property="IsCheckable" Value="True"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </TextBlock.ContextMenu>-->
                    </TextBlock>
                </StatusBarItem>

            </StatusBar>

        </Grid>
    </DockPanel>
</Window>
